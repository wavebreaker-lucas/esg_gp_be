# Generated by Django 5.1.7 on 2025-04-04 19:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0007_add_metric_value_perms'),
        ('data_management', '0020_esgmetric_is_multi_value_metricvaluefield_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='esgmetricsubmission',
            options={'ordering': ['assignment', 'metric', 'reporting_period', '-submitted_at'], 'verbose_name': 'Metric Submission Input', 'verbose_name_plural': 'Metric Submission Inputs'},
        ),
        migrations.AlterUniqueTogether(
            name='esgmetricsubmission',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='esgmetric',
            name='aggregates_inputs',
            field=models.BooleanField(default=False, help_text="Does this metric's final value come from aggregating multiple raw inputs?"),
        ),
        migrations.AlterField(
            model_name='esgmetricevidence',
            name='intended_metric',
            field=models.ForeignKey(blank=True, help_text='The metric this evidence is intended for, before being attached to a submission input', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='intended_evidence', to='data_management.esgmetric'),
        ),
        migrations.AlterField(
            model_name='esgmetricevidence',
            name='submission',
            field=models.ForeignKey(blank=True, help_text='The specific submission input this evidence supports', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evidence', to='data_management.esgmetricsubmission'),
        ),
        migrations.AlterField(
            model_name='esgmetricsubmission',
            name='is_verified',
            field=models.BooleanField(default=False, help_text='Verification status of this specific input'),
        ),
        migrations.AlterField(
            model_name='esgmetricsubmission',
            name='layer',
            field=models.ForeignKey(blank=True, help_text='The layer this input data represents (if different from assignment layer)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submissions', to='accounts.layerprofile'),
        ),
        migrations.AlterField(
            model_name='esgmetricsubmission',
            name='notes',
            field=models.TextField(blank=True, help_text='Notes specific to this raw input'),
        ),
        migrations.AlterField(
            model_name='esgmetricsubmission',
            name='reporting_period',
            field=models.DateField(blank=True, help_text='For time-based metrics (e.g., monthly data), indicates the period this input applies to', null=True),
        ),
        migrations.AlterField(
            model_name='esgmetricsubmission',
            name='text_value',
            field=models.TextField(blank=True, help_text='For non-numeric metrics or raw text input', null=True),
        ),
        migrations.AlterField(
            model_name='esgmetricsubmission',
            name='verification_notes',
            field=models.TextField(blank=True, help_text='Verification notes for this specific input'),
        ),
        migrations.CreateModel(
            name='ReportedMetricValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reporting_period', models.DateField(help_text='The specific period this aggregated value represents (e.g., month-end, quarter-end)')),
                ('value', models.FloatField(blank=True, null=True)),
                ('text_value', models.TextField(blank=True, null=True)),
                ('calculated_at', models.DateTimeField(auto_now_add=True, help_text='When this value was first calculated/created')),
                ('last_updated_at', models.DateTimeField(auto_now=True, help_text='When this value was last updated')),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_values', to='data_management.templateassignment')),
                ('layer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_values', to='accounts.layerprofile')),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_values', to='data_management.esgmetric')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_reported_values', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reported Metric Value',
                'verbose_name_plural': 'Reported Metric Values',
                'ordering': ['assignment', 'metric', 'reporting_period'],
            },
        ),
        migrations.AddField(
            model_name='esgmetricsubmission',
            name='reported_value',
            field=models.ForeignKey(blank=True, help_text='The final reported value this input contributed to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_submissions', to='data_management.reportedmetricvalue'),
        ),
        migrations.AddIndex(
            model_name='esgmetricsubmission',
            index=models.Index(fields=['reported_value'], name='data_manage_reporte_e80618_idx'),
        ),
        migrations.AddIndex(
            model_name='reportedmetricvalue',
            index=models.Index(fields=['assignment', 'metric', 'reporting_period', 'layer'], name='unique_reported_value_idx'),
        ),
        migrations.AddIndex(
            model_name='reportedmetricvalue',
            index=models.Index(fields=['reporting_period'], name='data_manage_reporti_bcf8a7_idx'),
        ),
        migrations.AddIndex(
            model_name='reportedmetricvalue',
            index=models.Index(fields=['is_verified'], name='data_manage_is_veri_a8c6e8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reportedmetricvalue',
            unique_together={('assignment', 'metric', 'reporting_period', 'layer')},
        ),
    ]
