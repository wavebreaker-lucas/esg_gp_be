# Generated by Django 5.1.7 on 2025-04-17 19:20

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data_management', '0040_esgmetricevidence_target_vehicle'),
    ]

    operations = [
        migrations.CreateModel(
            name='FuelSourceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='Unique identifier code for this source type', max_length=100, unique=True)),
                ('label', models.CharField(help_text='Display name for this source type', max_length=255)),
            ],
            options={
                'verbose_name': 'Fuel Source Type',
                'verbose_name_plural': 'Fuel Source Types',
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='FuelRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Source name (e.g., Generator #1)', max_length=100)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this source')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this source is currently active')),
                ('fuel_type', models.ForeignKey(help_text='Type of fuel used (e.g., diesel, natural gas)', on_delete=django.db.models.deletion.PROTECT, related_name='fuel_sources', to='data_management.fueltype')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fuel_records', to='data_management.esgmetricsubmission')),
                ('source_type', models.ForeignKey(help_text='Type of source (e.g., electricity generator, heater)', on_delete=django.db.models.deletion.PROTECT, related_name='sources', to='data_management.fuelsourcetype')),
            ],
            options={
                'verbose_name': 'Fuel Record',
                'verbose_name_plural': 'Fuel Records',
                'ordering': ['submission', 'name'],
            },
        ),
        migrations.CreateModel(
            name='FuelMonthlyData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField(help_text='The month-end date this data represents')),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of fuel consumed during this period', max_digits=10, null=True)),
                ('emission_calculated', models.BooleanField(default=False, help_text='Whether emissions have been calculated for this data point')),
                ('emission_value', models.DecimalField(blank=True, decimal_places=4, help_text='Calculated emissions value (typically in kgCO2e)', max_digits=12, null=True)),
                ('emission_unit', models.CharField(default='kgCO2e', help_text='Unit of emission calculation', max_length=20)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_data', to='data_management.fuelrecord')),
            ],
            options={
                'verbose_name': 'Fuel Monthly Data',
                'verbose_name_plural': 'Fuel Monthly Data',
                'ordering': ['source', 'period'],
            },
        ),
        migrations.CreateModel(
            name='FuelConsumptionMetric',
            fields=[
                ('baseesgmetric_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data_management.baseesgmetric')),
                ('emission_factor_mapping', models.JSONField(default=dict, help_text='Mapping of fuel_type to emission subcategories')),
                ('source_type_choices', models.JSONField(default=list, help_text='DEPRECATED: Use source_types M2M relation instead')),
                ('fuel_type_choices', models.JSONField(default=list, help_text='DEPRECATED: Use fuel_types M2M relation instead')),
                ('reporting_year', models.PositiveIntegerField(default=2025, help_text='Default reporting year for fuel data')),
                ('frequency', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annual', 'Annual')], default='monthly', help_text='Frequency of data collection for fuel consumption', max_length=20)),
                ('fuel_types', models.ManyToManyField(help_text='Fuel types available for selection', related_name='fuel_consumption_metrics', to='data_management.fueltype')),
                ('source_types', models.ManyToManyField(help_text='Source types available for selection', related_name='fuel_metrics', to='data_management.fuelsourcetype')),
            ],
            options={
                'verbose_name': 'Fuel Consumption Metric',
                'verbose_name_plural': 'Fuel Consumption Metrics',
            },
            bases=('data_management.baseesgmetric',),
        ),
    ]
