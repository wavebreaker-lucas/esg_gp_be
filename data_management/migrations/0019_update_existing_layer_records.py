# Generated by Django 5.1.7 on 2025-03-27 19:12

from django.db import migrations


def update_layer_to_1(apps, schema_editor):
    """Update all existing submissions and evidence to use layer ID 1"""
    ESGMetricSubmission = apps.get_model('data_management', 'ESGMetricSubmission')
    ESGMetricEvidence = apps.get_model('data_management', 'ESGMetricEvidence')
    LayerProfile = apps.get_model('accounts', 'LayerProfile')
    
    # Get layer 1
    try:
        layer_1 = LayerProfile.objects.get(id=1)
        print(f"Found layer 1: {layer_1.company_name}")
        
        # Get count of records before update
        submissions_before = ESGMetricSubmission.objects.filter(layer__isnull=False).exclude(layer=layer_1).count()
        evidence_before = ESGMetricEvidence.objects.filter(layer__isnull=False).exclude(layer=layer_1).count()
        
        print(f"Found {submissions_before} submissions and {evidence_before} evidence files to update")
        
        # Update all submissions to use layer 1
        submissions_updated = ESGMetricSubmission.objects.filter(layer__isnull=False).exclude(layer=layer_1).update(layer=layer_1)
        
        # Update all evidence to use layer 1
        evidence_updated = ESGMetricEvidence.objects.filter(layer__isnull=False).exclude(layer=layer_1).update(layer=layer_1)
        
        print(f"Successfully updated {submissions_updated} submissions and {evidence_updated} evidence files to use layer 1")
    
    except LayerProfile.DoesNotExist:
        print("Layer with ID 1 not found. Cannot update records.")


class Migration(migrations.Migration):

    dependencies = [
        ('data_management', '0018_update_default_layer_to_1'),
    ]

    operations = [
        migrations.RunPython(
            update_layer_to_1,
            reverse_code=migrations.RunPython.noop
        ),
    ]
