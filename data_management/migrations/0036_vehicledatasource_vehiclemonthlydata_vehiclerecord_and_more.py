# Generated by Django 5.1.7 on 2025-04-14 19:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0011_add_factor_management_permissions'),
        ('data_management', '0035_remove_esgmetricevidence_submission'),
    ]

    operations = [
        migrations.CreateModel(
            name='VehicleDataSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_date', models.DateField(help_text='Date of the data source (e.g., receipt date)')),
                ('source_reference', models.CharField(blank=True, help_text='Reference number or identifier for this data source', max_length=100)),
                ('kilometers', models.DecimalField(blank=True, decimal_places=2, help_text='Distance traveled in kilometers from this source', max_digits=10, null=True)),
                ('fuel_consumed', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of fuel consumed in liters from this source', max_digits=10, null=True)),
                ('location', models.CharField(blank=True, help_text='Location where data was collected', max_length=255)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this data source')),
            ],
            options={
                'verbose_name': 'Vehicle Data Source',
                'verbose_name_plural': 'Vehicle Data Sources',
                'ordering': ['vehicle_monthly_data', 'source_date'],
            },
        ),
        migrations.CreateModel(
            name='VehicleMonthlyData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField(help_text='The month-end date this data represents')),
                ('kilometers', models.DecimalField(blank=True, decimal_places=2, help_text='Distance traveled in kilometers during this period', max_digits=10, null=True)),
                ('fuel_consumed', models.DecimalField(blank=True, decimal_places=2, help_text='Amount of fuel consumed in liters during this period', max_digits=10, null=True)),
                ('emission_calculated', models.BooleanField(default=False, help_text='Whether emissions have been calculated for this data point')),
                ('emission_value', models.DecimalField(blank=True, decimal_places=4, help_text='Calculated emissions value (typically in kgCO2e)', max_digits=12, null=True)),
                ('emission_unit', models.CharField(default='kgCO2e', help_text='Unit of emission calculation', max_length=20)),
            ],
            options={
                'verbose_name': 'Vehicle Monthly Data',
                'verbose_name_plural': 'Vehicle Monthly Data',
                'ordering': ['vehicle', 'period'],
            },
        ),
        migrations.CreateModel(
            name='VehicleRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(help_text='Vehicle brand/make', max_length=100)),
                ('model', models.CharField(help_text='Vehicle model', max_length=100)),
                ('registration_number', models.CharField(help_text='Vehicle registration/license plate number', max_length=50)),
                ('vehicle_type', models.CharField(help_text='Type of vehicle (e.g., private car, truck)', max_length=50)),
                ('fuel_type', models.CharField(help_text='Type of fuel used (e.g., petrol, diesel)', max_length=50)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this vehicle')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this vehicle is currently active')),
            ],
            options={
                'verbose_name': 'Vehicle Record',
                'verbose_name_plural': 'Vehicle Records',
                'ordering': ['submission', 'brand', 'model', 'registration_number'],
            },
        ),
        migrations.CreateModel(
            name='VehicleTrackingMetric',
            fields=[
                ('baseesgmetric_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data_management.baseesgmetric')),
                ('vehicle_type_choices', models.JSONField(default=list, help_text='List of vehicle types available for selection')),
                ('fuel_type_choices', models.JSONField(default=list, help_text='List of fuel types available for selection')),
                ('emission_factor_mapping', models.JSONField(default=dict, help_text='Mapping of vehicle_type + fuel_type combinations to emission subcategories')),
                ('reporting_year', models.PositiveIntegerField(default=2025, help_text='Default reporting year for vehicle data')),
                ('frequency', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annual', 'Annual')], default='monthly', help_text='Frequency of data collection for vehicles', max_length=20)),
                ('show_registration_number', models.BooleanField(default=True, help_text='Whether to display and require vehicle registration number')),
            ],
            options={
                'verbose_name': 'Vehicle Tracking Metric',
                'verbose_name_plural': 'Vehicle Tracking Metrics',
            },
            bases=('data_management.baseesgmetric',),
        ),
        migrations.AlterModelOptions(
            name='calculatedemissionvalue',
            options={'ordering': ['-reporting_period', 'assignment', 'layer', 'emission_scope', '-is_primary_record'], 'verbose_name': 'Calculated GHG Emission Value', 'verbose_name_plural': 'Calculated GHG Emission Values'},
        ),
        migrations.AlterUniqueTogether(
            name='calculatedemissionvalue',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='calculatedemissionvalue',
            name='calculation_metadata',
            field=models.JSONField(blank=True, default=dict, help_text='Additional calculation metadata, especially for composite calculations'),
        ),
        migrations.AddField(
            model_name='calculatedemissionvalue',
            name='is_primary_record',
            field=models.BooleanField(db_index=True, default=True, help_text='Whether this is the primary calculation record for the source'),
        ),
        migrations.AddField(
            model_name='calculatedemissionvalue',
            name='proportion',
            field=models.DecimalField(decimal_places=4, default='1.0', help_text='Proportion this calculation contributes to the total (0.0-1.0)', max_digits=5),
        ),
        migrations.AddField(
            model_name='calculatedemissionvalue',
            name='related_group_id',
            field=models.UUIDField(blank=True, db_index=True, help_text='UUID linking related calculations from the same source', null=True),
        ),
        migrations.AlterField(
            model_name='esgmetricevidence',
            name='intended_metric',
            field=models.ForeignKey(blank=True, help_text='The metric this evidence is for', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='intended_evidence', to='data_management.baseesgmetric'),
        ),
        migrations.AlterField(
            model_name='esgmetricevidence',
            name='source_identifier',
            field=models.CharField(blank=True, help_text='Identifier for the source of this evidence (e.g., facility name)', max_length=100, null=True),
        ),
        migrations.AlterUniqueTogether(
            name='calculatedemissionvalue',
            unique_together={('source_activity_value', 'emission_factor', 'related_group_id')},
        ),
        migrations.AddIndex(
            model_name='calculatedemissionvalue',
            index=models.Index(fields=['is_primary_record'], name='data_manage_is_prim_3cd4af_idx'),
        ),
        migrations.AddIndex(
            model_name='calculatedemissionvalue',
            index=models.Index(fields=['related_group_id'], name='data_manage_related_59a613_idx'),
        ),
        migrations.AddField(
            model_name='vehicledatasource',
            name='vehicle_monthly_data',
            field=models.ForeignKey(help_text='The monthly summary record this data source contributes to', on_delete=django.db.models.deletion.CASCADE, related_name='data_sources', to='data_management.vehiclemonthlydata'),
        ),
        migrations.AddField(
            model_name='vehiclerecord',
            name='submission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_records', to='data_management.esgmetricsubmission'),
        ),
        migrations.AddField(
            model_name='vehiclemonthlydata',
            name='vehicle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_data', to='data_management.vehiclerecord'),
        ),
    ]
